# Data Types and Operators, Tegan Robinson, v0.0

# Fundemantal Data Types
# String - str - Sequence of letters, numbers, spaces, or other characteristics.
# Strings in Python are inside ' ' or " "
# idc if you use ' ' or " " just be consistent

#Boolean - bool - True or False values.

#Float - float - any number value with a decimal, +/-, including 0.0

# Integers - int - any whole number, +/-, including 0.

# Data types are stored in VARIABLES
# A variable is basically a bucket with a name to put data into.
# VARIABLES NAMES SHOULD TELL YOU WHAT DATA IS BEING STORED IN IT!
# VARIABLES CANNOT START WITH A NUMBER
# camelCaseVariableNames
#snake_case_vairbale_names

#DECLARIGN VAIRABLES AND ASSIGNING VALUES

high_score = 10000000 #int data type
high_score = 10000000 #int data type

carSpeed = 12.31 #float data type, miles per hour
car_speed = -1.2452340024 #float data type, miles per hour

hasAxe = True #boolean data type
isPurple = False #boolean data type

playerName = "Tegan Robinson" # string data type
dialogue = "Tegan Robinson" # string data type

#ASSIGN NEW VALUES
playerName = "Thomas Rogers"
carspeed = -1.25

# DATA TYPES CAN CHANGE, BE CAREFUL
hasAxe = 5.0

#Printing Data Types
newInt = 3
newFloat = 4.0
newString = "Skibidi Toilet"
newBool = False

print(type(newInt))
print(type(newFloat))
print(type(newString))
print(type(newBool))


#printing Variables to Console / Screen
print(playerName)
print(isPurple)
print(high_score)
print(car_speed)

# printing varibales and expressions to console / screen
print(high_score + 5000)
print(4 * 12)
print(high_score)


# PRINTING VAIRABLES INSIDE OF STRINGS
print(f"Hello {playerName}. Your highscore is {high_score}.\n")

# ARIHTMETIC OPERATORS
myInt = 4
myFloat = 2.57
myNum = 0

#addition
myInt = 7+10
myFloat = 2.0 +3.25

myInt = myInt + 5

Mynum = myInt + myFloat
# When you add an int and a float together, the answer becomes a float

# subtraction
myNum = myInt - myFloat
myInt = myFloat - 1.25

# Multiplication
myNum = myInt * myFloat

# Division
myNumber = myInt / myFloat # first is numerator, sceond num is denominator

# MODULUS (MODULO) % -- Returns REMAINDER after dividing
# MOST COMMON USE FOR MODULUS IS DETERMINING EVEN / ODD NUMBERS.
numStudents = 6
numSlicesPizza = 36

leftovers = numSlicesPizza % numStudents
print(leftovers)

# EXPONENTS **
numSquared = 5 ** 2 # 5 is the base, 2 is the exponent

# FLOOR-DIVISION // -- Divides, throws out any decimal.
myNum = myInt // myFloat

# Addition-Assignment Operator - Mostly used for counters.
myNum=5
myNum = myNum + 1 # Old-School Method
myNum += 1 #new Hotness
myNum *= 1
myNum = 1



#IS-EQUAL-TO == Are the two values equal to each other?
#returns True or False based on evaluation
x = 6
#print(x==5)

#NOT-EQUAL-TO != Are the two values NOT equal?
#Returns True or False based on evaluation
#print(x !=12)

# GREATER THAN / GREATER-THAN-OR-EQUAL-TO
#print(5 > 3) # Greater Than
#print(12 >=2) # Greater than or Euqal To

# LESS THAn / LESS THAN-OR-EQUAL TO
#print(5 < 3) # LESS Than
#print(12 <=2) #Less that or equal to

#LOGICAL OPERATORS
#and -- ALL CONDITIONS MUST BE TRUE FOR ENTIRE STATEMENT TO BE TRUE
age = 16
height = 58
eyeColor = "Hazel"
# In order to ride the Teacups, you must be at least 18 years old and at least 60" tall.
#print(age >= 16 and height >= 58)
#print(age >= 16 and height >= 58 and eyeColor == "Black")
# ALWAYS CHECK FOR THE LEAST_LIKLEY TO BE CONDITION FIRST!!!!!!
#print(defeatedboss == True and level > 5 and hasBluekey == True)


# or -- At LEAST ONE CONDITION MUS BE TRUE FOR ENTIRE STATEMENT TO BE TRUE
print(age >=16 or height >= 58)
print(age >= 16 or height >=58 or eyeColor == "Blue")
#ALWAYS CHECK FOR THE MOST-LIKLEY TO BE TRUE CONDITION FIRST!!!!!!
print(defeatedBoss == False or level > 5 or hasBlueKey == True)

# not -- RETURNS THE OPPOSITE VALUE OF THE STATEMENT
a = 5 
#print(a == 5)
#print(not (not(a==5))

# COMBINING LOGICAL OPERATORS
#print(a == 5 and hasKey == True or isCloud == True)
#TRUE and 

#IDENTIFY OPERATORS
g = 1.0
h = 1.0
i = g
print(g is h)
print(i is h)
print(i is not 1.0)
print( i is not g)

# MEMBERSHIP OPERATORS
fruits = ["apple", "bannana", "tomato"]
print("bannana" in fruits)
print ("potato" in fruits)

